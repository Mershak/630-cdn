Phase 2: Basic CDN Implementation with FIFO Caching
===============================================

Changes from Phase 1
------------------
1. Architecture:
   - Added 4 edge nodes in major US cities
   - Implemented CDN node discovery system
   - Added FIFO caching at edge nodes
   - Users now connect to nearest edge node instead of origin

2. Edge Node Implementation:
   - FIFO cache with size limit of 50 items (50% of content)
   - Cache replacement policy: First In, First Out
   - Edge nodes fetch uncached content from origin
   - Maintains same network delay simulation as Phase 1
   - Only simulates user->edge delay for responses

3. Origin Server Changes:
   - Added CDN discovery endpoint (/discover_cdn)
   - Maintains content database
   - Now primarily serves edge nodes instead of users
   - Returns closest edge node based on geographic distance
   - Two distinct delay calculations:
     * For user requests: Full user->origin delay
     * For edge requests: Only edge->origin delay
   - Reduced processing time to 0.01-0.1ms for modern server simulation

4. User Distribution:
   - Fixed set of 9 users with specific locations:
     * Chicago (3 users):
       - Downtown (at edge node)
       - North/Evanston (15km away)
       - West/Oak Park (20km away)
     * New York (2 users):
       - Manhattan (at edge node)
       - Newark (15km away)
     * Los Angeles (2 users):
       - Downtown (at edge node)
       - Santa Monica (20km away)
     * Houston (2 users):
       - Downtown (at edge node)
       - The Woodlands (40km away)

New Features
-----------
1. CDN Node Discovery:
   - Users query origin for nearest edge node
   - Distance-based edge node assignment
   - Automatic routing to optimal edge node

2. Edge Node Caching:
   - FIFO cache implementation
   - Cache size: 50 items (50% of total content)
   - No cache coordination between edges
   - Cache hits avoid origin server requests

3. Performance Metrics:
   - Distance to edge vs. distance to origin
   - Cache hit ratios
   - Request timing with and without cache hits
   - Per-edge node performance statistics
   - Total and average request times per user

Edge Node Locations
-----------------
1. New York, NY (40.7128°N, 74.0060°W)
2. Chicago, IL (41.8781°N, 87.6298°W)
3. Los Angeles, CA (34.0522°N, 118.2437°W)
4. Houston, TX (29.7604°N, 95.3698°W)

Technical Implementation
----------------------
1. Edge Node Server:
   - FastAPI implementation
   - OrderedDict for FIFO cache
   - Async communication with origin
   - Geographic distance-based delay
   - Simulates only user->edge delay

2. Origin Server:
   - CDN node discovery endpoint
   - Edge node location database
   - Direct content serving capability
   - Distinct delay handling for users vs edges
   - Minimal processing time (0.01-0.1ms)

3. User Simulator:
   - CDN discovery integration
   - Cache hit/miss tracking
   - Enhanced performance metrics
   - Fixed user locations for consistent testing
   - Reports total and average request times

Expected Improvements
-------------------
1. Latency Reduction:
   - Shorter average distance to server
   - Reduced network delay for cached content
   - Better geographic distribution of servers

2. Cache Benefits:
   - Large cache size (50% of content)
   - Reduced load on origin server
   - Faster response for cached content
   - Local availability of popular content

3. Metrics for Comparison:
   - Distance reduction from origin to edge
   - Cache hit ratios
   - Response time improvements
   - Geographic performance distribution
   - Total time per user

This phase demonstrates the basic benefits of CDN architecture:
- Geographic distribution of servers
- Significant caching capabilities
- Automatic server selection
- Reduced latency through proximity
- Realistic network delay simulation

Future improvements (Phase 3) will focus on implementing more sophisticated 
caching strategies based on content popularity. 